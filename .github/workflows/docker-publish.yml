name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]  # Publish semver tags as releases.
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io  # Use docker.io for Docker Hub if empty
  IMAGE_NAME: ${{ github.repository }}/alpine_dev  # Updated to point to specific package

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # This is used to complete the identity challenge with sigstore/fulcio when running outside of PRs.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign  # Install the cosign tool except on PR
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx  # Set up BuildKit Docker container builder for multi-platform images
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}  # Login against a Docker registry except on PR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata  # Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image  # Build and push Docker image with Buildx (don't push on PR)
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: alpine_dev/Dockerfile
          platforms: linux/amd64, linux/arm64/v8  # Specify the target platforms
          cache-from: type=gha
          cache-to: type=gha,mode=max
